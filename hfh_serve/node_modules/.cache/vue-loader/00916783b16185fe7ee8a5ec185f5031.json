{"remainingRequest":"C:\\vv\\4th\\VUEUI\\day02\\scaffolding\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\vv\\4th\\VUEUI\\day02\\scaffolding\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\vv\\4th\\VUEUI\\day02\\scaffolding\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\vv\\4th\\VUEUI\\day02\\scaffolding\\src\\views\\Main.vue?vue&type=template&id=c1f1971a&scoped=true&","dependencies":[{"path":"C:\\vv\\4th\\VUEUI\\day02\\scaffolding\\src\\views\\Main.vue","mtime":1630567965955},{"path":"C:\\vv\\4th\\VUEUI\\day02\\scaffolding\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vv\\4th\\VUEUI\\day02\\scaffolding\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\vv\\4th\\VUEUI\\day02\\scaffolding\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vv\\4th\\VUEUI\\day02\\scaffolding\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICBbCiAgICAgIF9jKCJtdC1oZWFkZXIiLCB7IGF0dHJzOiB7IGZpeGVkOiAiIiwgdGl0bGU6ICLpppbpobUiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7IGF0dHJzOiB7IHNsb3Q6ICJyaWdodCIgfSwgc2xvdDogInJpZ2h0IiB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJsaW5rIiwgYXR0cnM6IHsgdG86ICIvbG9naW4iIH0gfSwKICAgICAgICAgICAgICBbX3ZtLl92KCLnmbvlvZUiKV0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX3ZtLl92KCIgwqAgIiksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImxpbmsiLCBhdHRyczogeyB0bzogIi9yZWdpc3RlciIgfSB9LAogICAgICAgICAgICAgIFtfdm0uX3YoIuazqOWGjCIpXQogICAgICAgICAgICApCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICkKICAgICAgXSksCiAgICAgIF9jKAogICAgICAgICJtdC1uYXZiYXIiLAogICAgICAgIHsKICAgICAgICAgIGF0dHJzOiB7IGZpeGVkOiAiIiB9LAogICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgdmFsdWU6IF92bS5uYXZhY3RpdmUsCiAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICBfdm0ubmF2YWN0aXZlID0gJCR2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGV4cHJlc3Npb246ICJuYXZhY3RpdmUiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBfdm0uX2wodGhpcy50eXBlLCBmdW5jdGlvbihlKSB7CiAgICAgICAgICByZXR1cm4gX2MoIm10LXRhYi1pdGVtIiwgeyBrZXk6IGUuaWQsIGF0dHJzOiB7IGlkOiAiIiArIGUuaWQgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdihfdm0uX3MoZS5jYXRlZ29yeV9uYW1lKSkKICAgICAgICAgIF0pCiAgICAgICAgfSksCiAgICAgICAgMQogICAgICApLAogICAgICBfYygKICAgICAgICAibXQtdGFiLWNvbnRhaW5lciIsCiAgICAgICAgewogICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogImluZmluaXRlLXNjcm9sbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtaW5maW5pdGUtc2Nyb2xsIiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmxvYWRtb3JlLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJsb2FkbW9yZSIKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJpbmZpbml0ZS1zY3JvbGwtZGlzdGFuY2UiOiAiMTAwIiwKICAgICAgICAgICAgImluZmluaXRlLXNjcm9sbC1kaXNhYmxlZCI6ICJidXN5IiwKICAgICAgICAgICAgImluZmluaXRlLXNjcm9sbC1pbW1lZGlhdGUtY2hlY2siOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgIm10LXRhYi1jb250YWluZXItaXRlbSIsCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJtdC1zd2lwZSIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0eWxlOiB7IGhlaWdodDogX3ZtLmggfSwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBhdXRvOiA0MDAwLAogICAgICAgICAgICAgICAgICAgIHNwZWVkOiAyMDAsCiAgICAgICAgICAgICAgICAgICAgc2hvd0luZGljYXRvcnM6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgY29udGludW91czogdHJ1ZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygibXQtc3dpcGUtaXRlbSIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6ICIvaW1nLzEuanBnIiwgYWx0OiAiIiB9IH0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygibXQtc3dpcGUtaXRlbSIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6ICIvaW1nLzIuanBnIiwgYWx0OiAiIiB9IH0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygibXQtc3dpcGUtaXRlbSIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6ICIvaW1nLzMuanBnIiwgYWx0OiAiIiB9IH0pCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX3ZtLl9sKF92bS5hcnRpY2xlcywgZnVuY3Rpb24oaXRlbSwgaSkgewogICAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgeyBrZXk6IGksIHN0YXRpY0NsYXNzOiAiYXJ0aWNsZUl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL2FydGljbGUvIiArIGl0ZW0uaWQgfSB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImFydGljbGVJdGVtLWhlYWRlciIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoaXRlbS5zdWJqZWN0KSkKICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYXJ0aWNsZUl0ZW0td3JhcHBlciIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYXJ0aWNsZUltZyIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGl0ZW0uaW1hZ2UgIT0gbnVsbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJpdGVtLmltYWdlIT1udWxsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiAiL2ltZy9hcnRpY2xlcy8iICsgaXRlbS5pbWFnZSB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYXJ0aWNsZURlcyIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyhpdGVtLmRlc2NyaXB0aW9uKSArICIgIikKICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uaXNTaG93LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImlzU2hvdyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYXJ0aWNsZUl0ZW0taGVhZGVyIiwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIsCiAgICAgICAgICAgICAgICAgICAgICAgICJsaW5lLWhlaWdodCI6ICI1MHB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjNjY2IgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIOWRgH7vvIHkv7rkuZ/mmK/mnInlupXnur/nmoTvvIEgIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDIKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}